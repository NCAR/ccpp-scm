SET(W3_source_code ${W3LIB_SRC}/aea.f
                  ${W3LIB_SRC}/errexit.f
                  ${W3LIB_SRC}/errmsg.f
                  ${W3LIB_SRC}/fparsei.f
                  ${W3LIB_SRC}/fparser.f
                  ${W3LIB_SRC}/gbyte.f
                  ${W3LIB_SRC}/gbytec.f
                  ${W3LIB_SRC}/gbytes.f
                  ${W3LIB_SRC}/gbytesc.f
                  ${W3LIB_SRC}/getbit.f
                  ${W3LIB_SRC}/getgb.f
                  ${W3LIB_SRC}/getgb1.f
                  ${W3LIB_SRC}/getgb1r.f
                  ${W3LIB_SRC}/getgb1re.f
                  ${W3LIB_SRC}/getgb1s.f
                  ${W3LIB_SRC}/getgbe.f
                  ${W3LIB_SRC}/getgbeh.f
                  ${W3LIB_SRC}/getgbem.f
                  ${W3LIB_SRC}/getgbemh.f
                  ${W3LIB_SRC}/getgbemn.f
                  ${W3LIB_SRC}/getgbemp.f
                  ${W3LIB_SRC}/getgbep.f
                  ${W3LIB_SRC}/getgbex.f
                  ${W3LIB_SRC}/getgbexm.f
                  ${W3LIB_SRC}/getgbh.f
                  ${W3LIB_SRC}/getgbm.f
                  ${W3LIB_SRC}/getgbmh.f
                  ${W3LIB_SRC}/getgbmp.f
                  ${W3LIB_SRC}/getgbp.f
                  ${W3LIB_SRC}/getgi.f
                  ${W3LIB_SRC}/getgir.f
                  ${W3LIB_SRC}/gtbits.f
                  ${W3LIB_SRC}/idsdef.f
                  ${W3LIB_SRC}/instrument.f
                  ${W3LIB_SRC}/iw3jdn.f
                  ${W3LIB_SRC}/iw3pds.f
                  ${W3LIB_SRC}/iw3unp29.f
                  ${W3LIB_SRC}/ixgb.f
                  ${W3LIB_SRC}/lengds.f
                  ${W3LIB_SRC}/makwmo.f
                  ${W3LIB_SRC}/mkfldsep.f
                  ${W3LIB_SRC}/mova2i.c
                  ${W3LIB_SRC}/pdsens.f
                  ${W3LIB_SRC}/pdseup.f
                  ${W3LIB_SRC}/putgb.f
                  ${W3LIB_SRC}/putgbe.f
                  ${W3LIB_SRC}/putgben.f
                  ${W3LIB_SRC}/putgbex.f
                  ${W3LIB_SRC}/putgbn.f
                  ${W3LIB_SRC}/q9ie32.f
                  ${W3LIB_SRC}/r63w72.f
                  ${W3LIB_SRC}/sbyte.f
                  ${W3LIB_SRC}/sbytec.f
                  ${W3LIB_SRC}/sbytes.f
                  ${W3LIB_SRC}/sbytesc.f
                  ${W3LIB_SRC}/skgb.f
                  #${W3LIB_SRC}/summary.c
                  ${W3LIB_SRC}/w3ai00.f
                  ${W3LIB_SRC}/w3ai01.f
                  ${W3LIB_SRC}/w3ai08.f
                  ${W3LIB_SRC}/w3ai15.f
                  ${W3LIB_SRC}/w3ai18.f
                  ${W3LIB_SRC}/w3ai19.f
                  ${W3LIB_SRC}/w3ai24.f
                  ${W3LIB_SRC}/w3ai38.f
                  ${W3LIB_SRC}/w3ai39.f
                  ${W3LIB_SRC}/w3aq15.f
                  ${W3LIB_SRC}/w3as00.f
                  ${W3LIB_SRC}/w3difdat.f
                  ${W3LIB_SRC}/w3doxdat.f
                  ${W3LIB_SRC}/w3fi01.f
                  ${W3LIB_SRC}/w3fi04.f
                  ${W3LIB_SRC}/w3fi58.f
                  ${W3LIB_SRC}/w3fi59.f
                  ${W3LIB_SRC}/w3fi62.f
                  ${W3LIB_SRC}/w3fi63.f
                  ${W3LIB_SRC}/w3fi64.f
                  ${W3LIB_SRC}/w3fi68.f
                  ${W3LIB_SRC}/w3fi69.f
                  ${W3LIB_SRC}/w3fi71.f
                  ${W3LIB_SRC}/w3fi72.f
                  ${W3LIB_SRC}/w3fi73.f
                  ${W3LIB_SRC}/w3fi74.f
                  ${W3LIB_SRC}/w3fi75.f
                  ${W3LIB_SRC}/w3fi76.f
                  ${W3LIB_SRC}/w3fi82.f
                  ${W3LIB_SRC}/w3fi83.f
                  ${W3LIB_SRC}/w3fi88.f
                  ${W3LIB_SRC}/w3fi92.f
                  ${W3LIB_SRC}/w3fp11.f
                  ${W3LIB_SRC}/w3fp12.f
                  ${W3LIB_SRC}/w3fp13.f
                  ${W3LIB_SRC}/w3fs13.f
                  ${W3LIB_SRC}/w3fs15.f
                  ${W3LIB_SRC}/w3fs21.f
                  ${W3LIB_SRC}/w3fs26.f
                  ${W3LIB_SRC}/w3ft32.f
                  ${W3LIB_SRC}/w3kind.f
                  ${W3LIB_SRC}/w3locdat.f
                  ${W3LIB_SRC}/w3movdat.f
                  ${W3LIB_SRC}/w3nogds.f
                  ${W3LIB_SRC}/w3pradat.f
                  ${W3LIB_SRC}/w3reddat.f
                  ${W3LIB_SRC}/w3tagb.f
                  ${W3LIB_SRC}/w3trnarg.f
                  ${W3LIB_SRC}/w3unpk77.f
                  ${W3LIB_SRC}/w3utcdat.f
                  ${W3LIB_SRC}/w3valdat.f
                  ${W3LIB_SRC}/w3ymdh4.f
                  ${W3LIB_SRC}/xmovex.f
                  ${W3LIB_SRC}/xstore.f
)

#set Fortran compiler flags
if (${CMAKE_Fortran_COMPILER_ID} MATCHES "GNU")
  #set(f_flags -fno-range-check -O3 -DLINUX)
  set(f_flags -O0 -g -fdefault-real-8 -fno-range-check -ffixed-form -fPIC)
elseif (${CMAKE_Fortran_COMPILER_ID} MATCHES "Intel")
  set(f_flags -O0 -g -r8 -fixed -fPIC)
else (${CMAKE_Fortran_COMPILER_ID} MATCHES "GNU")
  message ("CMAKE_Fortran_COMPILER full path: " ${CMAKE_Fortran_COMPILER})
  message ("Fortran compiler: " ${CMAKE_Fortran_COMPILER_ID})
  message (FATAL_ERROR "This library has only been compiled with gfortran and ifort. If another compiler is needed, the appropriate flags must be added in ${W3LIB_SRC}/CMakeLists.txt")
endif (${CMAKE_Fortran_COMPILER_ID} MATCHES "GNU")

#set C compiler flags
set(c_flags -O3 -fPIC)

#add OpenMP
set(c_flags ${c_flags} ${OpenMP_C_FLAGS})
set(f_flags ${f_flags} ${OpenMP_Fortran_FLAGS})

if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
  set(c_flags ${c_flags} -DMACOSX)
elseif (${CMAKE_SYSTEM_NAME} MATCHES "Linux")
  set(c_flags ${c_flags} -DLINUX)
else (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
  message (FATAL_ERROR "This library has only been compiled on Linux and Darwin platforms. If another platform is needed, the appropriate flags must be added in ${W3LIB_SRC}/CMakeLists.txt")
endif (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")

if(${CMAKE_VERSION} LESS 3.3)
  file(GLOB f_files *.f)
  string (REPLACE ";" " " f_flags_str "${f_flags}")
  set(CMAKE_Fortran_FLAGS "${f_flags_str}")
  file(GLOB c_files *.c)
  string (REPLACE ";" " " c_flags_str "${c_flags}")
  set(CMAKE_C_FLAGS "${c_flags_str}")
else(${CMAKE_VERSION} LESS 3.3)
  add_compile_options("$<$<COMPILE_LANGUAGE:Fortran>:${f_flags}>")
  add_compile_options("$<$<COMPILE_LANGUAGE:C>:${c_flags}>")
endif (${CMAKE_VERSION} LESS 3.3)

ADD_LIBRARY(w3 STATIC ${W3_source_code})
