name: run the SCM with DEPHY v1 data

#on: [pull_request,workflow_dispatch]
on: [workflow_dispatch]

jobs:
  run-scm-DEPHY:

    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        fortran-compiler: [12]
        build-type:       [Release, Debug]
        py-version:       [3.11]

    # Environmental variables
    env:
      NFHOME:     /home/runner/netcdf-fortran
      NFVERSION:  v4.5.3
      bacio_ROOT: /home/runner/bacio
      sp_ROOT:    /home/runner/NCEPLIBS-sp
      w3emc_ROOT: /home/runner/myw3emc
      SCM_ROOT:   /home/runner/work/ccpp-scm/ccpp-scm
      suites:     SCM_GFS_v16,SCM_GFS_v16_ps

    # Workflow steps
    steps:
    # Install System Dependencies
    - name: Install System Dependencies
      run: |
        sudo apt-get update -qq && sudo apt-get install -qq -y --no-install-recommends \
        gfortran-${{matrix.fortran-compiler}} \
        libhdf5-dev \
        libnetcdf-pnetcdf-19 \
        libnetcdff7 \
        libnetcdf-dev \
        libnetcdff-dev \
        libxml2 \
        openmpi-bin \
        libopenmpi-dev

    #######################################################################################
    # Python setup
    #######################################################################################
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: ${{matrix.py-version}}

    - name: Install NetCDF Python libraries
      run: |
        pip install f90nml h5py netCDF4

    - name: Environment for openmpi compiler
      run: |
        echo "FC=mpif90" >> $GITHUB_ENV
        echo "CC=mpicc"  >> $GITHUB_ENV

    - name: Check MPI version
      run: |
        which mpif90
        mpif90 --version

    #######################################################################################
    # Install NCEP Libs
    #######################################################################################
    - name: Cache bacio library v2.4.1
      id: cache-bacio-fortran
      uses: actions/cache@v4
      with:
        path: /home/runner/bacio
        key: cache-bacio-fortran-${{matrix.fortran-compiler}}-${{matrix.build-type}}-key

    - name: Install bacio library v2.4.1
      if: steps.cache-bacio-fortran.outputs.cache-hit != 'true'
      run: |
        git clone --branch v2.4.1 https://github.com/NOAA-EMC/NCEPLIBS-bacio.git bacio
        cd bacio && mkdir build && cd build
        cmake -DCMAKE_INSTALL_PREFIX=${bacio_ROOT} ../
        make -j2
        make install
        echo "bacio_DIR=/home/runner/bacio/lib/cmake/bacio" >> $GITHUB_ENV

    - name: Cache SP-library v2.3.3
      id: cache-sp-fortran
      uses: actions/cache@v4
      with:
        path: /home/runner/NCEPLIBS-sp
        key: cache-sp-fortran-${{matrix.fortran-compiler}}-${{matrix.build-type}}-key

    - name: Install SP-library v2.3.3
      if: steps.cache-sp-fortran.outputs.cache-hit != 'true'
      run: |
        git clone --branch v2.3.3 https://github.com/NOAA-EMC/NCEPLIBS-sp.git NCEPLIBS-sp
        cd NCEPLIBS-sp && mkdir build && cd build
        cmake -DCMAKE_INSTALL_PREFIX=${sp_ROOT} ../
        make -j2
        make install
        echo "sp_DIR=/home/runner/NCEPLIBS-sp/lib/cmake/sp" >> $GITHUB_ENV

    - name: Cache w3emc library v2.9.2
      id: cache-w3emc-fortran
      uses: actions/cache@v4
      with:
        path: /home/runner/myw3emc
        key: cache-w3emc-fortran-${{matrix.fortran-compiler}}-${{matrix.build-type}}-key

    - name: Install w3emc library v2.9.2
      if: steps.cache-w3emc-fortran.outputs.cache-hit != 'true'
      run: |
        git clone --branch v2.9.2 https://github.com/NOAA-EMC/NCEPLIBS-w3emc.git NCEPLIBS-w3emc
        cd NCEPLIBS-w3emc && mkdir build && cd build
        cmake -DCMAKE_INSTALL_PREFIX=${w3emc_ROOT} ../
        make -j2
        make install
        echo "w3emc_DIR=/home/runner/myw3emc/lib/cmake/w3emc" >> $GITHUB_ENV

    #######################################################################################
    # Initialize SCM
    #######################################################################################
    - name: Checkout SCM code (into /home/runner/work/ccpp-scm/)
      uses: actions/checkout@v5

    - name: Initialize submodules
      run: git submodule update --init --recursive

    #######################################################################################
    # Build SCM. Run DEPHYv1 case.
    #######################################################################################
    - name: Download data for SCM
      run: |
        cd ${SCM_ROOT}
        ./contrib/get_all_static_data.sh
        ./contrib/get_thompson_tables.sh

    - name: Configure build with CMake (Release)
      if: contains(matrix.build-type, 'Release')
      run: |
        cd ${SCM_ROOT}/scm
        mkdir bin && cd bin
        cmake -DCCPP_SUITES=${suites} ../src

    - name: Configure build with CMake (Debug)
      if: contains(matrix.build-type, 'Debug')
      run: |
        cd ${SCM_ROOT}/scm
        mkdir bin && cd bin
        cmake -DCCPP_SUITES=${suites} -DCMAKE_BUILD_TYPE=Debug ../src

    - name: Build SCM
      run: |
        cd ${SCM_ROOT}/scm/bin
        make -j4

    - name: Clone GdR-DEPHY/DEPHY-SCM repository
      run: |
        cd /home/runner
        git clone https://github.com/GdR-DEPHY/DEPHY-SCM.git DEPHY-SCM

    - name: Run SCM with MAGIC_LEG04A DEPHY reference case
      run: |
        cd ${SCM_ROOT}/scm/bin
        ./run_scm.py -c MAGIC_LEG04A --case_data_dir /home/runner/DEPHY-SCM/MAGIC/LEG04A --runtime_mult 0.1 -v
