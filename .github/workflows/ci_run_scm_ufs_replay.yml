name: CI test to create SCM UFS-replay cases from UWM regression tests

on: [pull_request]

jobs:
  run_scm_ufs_replay:

    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash -el {0}
    #
    strategy:
      matrix:
        fortran-compiler: [gfortran-12]

    # Environmental variables
    env:
      dir_rt_cache: /home/runner/ufs_rts
      NFHOME:       /home/runner/netcdf-fortran
      NFVERSION:    v4.5.3
      bacio_ROOT:   /home/runner/bacio
      sp_ROOT:      /home/runner/NCEPLIBS-sp
      w3emc_ROOT:   /home/runner/myw3emc
      suites:       SCM_GFS_v16,SCM_GFS_v16_ps
      SCM_WORK:     ${{ github.workspace }}
      SCM_ROOT:     ${{ github.workspace }}

    steps:

    #######################################################################################
    # Checkout SCM code, setup python.
    #######################################################################################

    - name: Checkout SCM.
      uses: actions/checkout@v3

    - name: Initialize SCM submodules.
      run: git submodule update --init --recursive

    - name: Update system packages.
      run: sudo apt-get update

    - name: Cache conda
      uses: actions/cache@v3
      with:
        path: ~/conda_pkgs_dir
        key: conda-pkgs

    - name: Setup python.
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: env_ufsreplay
        environment-file: environment-ufsreplay.yml
        use-only-tar-bz2: true
        auto-activate-base: true
        auto-update-conda: true

    #######################################################################################
    # Create UFS-replay case for SCM using UWM Regression Tests
    #######################################################################################

    - name: Cache UWM regression test output.
      uses: actions/cache@v3
      with:
        path: ${dir_rt_cache}
        key: ufs-rt-files

    - name: Download UWM regression test output from NCAR-DTC FTP site, if not cached.
      run: |
        if test ! -d "${dir_rt_cache}"; then
          mkdir -p ${dir_rt_cache} && cd ${dir_rt_cache}
          wget -q ftp://ftp.rap.ucar.edu:/pub/ccpp-scm/ufs_rts_scmreplay_ci.tar
          tar -xvf ufs_rts_scmreplay_ci.tar
          ls ${dir_rt_cache}
        fi

    - name: Create UFS-replay case.
      run: |
        cd ${GITHUB_WORKSPACE}/scm/etc/scripts/
        ./UFS_forcing_ensemble_generator.py -d ${dir_rt_cache}/ --C_RES 192 -dt 360  -n control_c192 -lons 300 -lats 34

    #######################################################################################
    # Setup environment for SCM.
    # *NOTE* We should add hpstack and replace this section.
    #######################################################################################

    - name: Cache bacio library v2.4.1
      id: cache-bacio-fortran
      uses: actions/cache@v3
      with:
        path: /home/runner/bacio
        key: cache-bacio-fortran-${{matrix.fortran-compiler}}-key

    - name: Install bacio library v2.4.1
      if: steps.cache-bacio-fortran.outputs.cache-hit != 'true'
      run: |
        git clone --branch v2.4.1 https://github.com/NOAA-EMC/NCEPLIBS-bacio.git bacio
        cd bacio && mkdir build && cd build
        cmake -DCMAKE_INSTALL_PREFIX=${bacio_ROOT} ../
        make -j2
        make install
        echo "bacio_DIR=/home/runner/bacio/lib/cmake/bacio" >> $GITHUB_ENV

    - name: Cache SP-library v2.3.3
      id: cache-sp-fortran
      uses: actions/cache@v3
      with:
        path: /home/runner/NCEPLIBS-sp
        key: cache-sp-fortran-${{matrix.fortran-compiler}}-key

    - name: Install SP-library v2.3.3
      if: steps.cache-sp-fortran.outputs.cache-hit != 'true'
      run: |
        git clone --branch v2.3.3 https://github.com/NOAA-EMC/NCEPLIBS-sp.git NCEPLIBS-sp
        cd NCEPLIBS-sp && mkdir build && cd build
        cmake -DCMAKE_INSTALL_PREFIX=${sp_ROOT} ../
        make -j2
        make install
        echo "sp_DIR=/home/runner/NCEPLIBS-sp/lib/cmake/sp" >> $GITHUB_ENV

    - name: Cache w3emc library v2.9.2
      id: cache-w3emc-fortran
      uses: actions/cache@v3
      with:
        path: /home/runner/myw3emc
        key: cache-w3emc-fortran-${{matrix.fortran-compiler}}-key

    - name: Install w3emc library v2.9.2
      if: steps.cache-w3emc-fortran.outputs.cache-hit != 'true'
      run: |
        git clone --branch v2.9.2 https://github.com/NOAA-EMC/NCEPLIBS-w3emc.git NCEPLIBS-w3emc
        cd NCEPLIBS-w3emc && mkdir build && cd build
        cmake -DCMAKE_INSTALL_PREFIX=${w3emc_ROOT} ../
        make -j2
        make install
        echo "w3emc_DIR=/home/runner/myw3emc/lib/cmake/w3emc" >> $GITHUB_ENV

    - name: Install NetCDF C library
      run: sudo apt-get install libnetcdf-dev

    - name: Cache NetCDF Fortran library v4.4.4
      id: cache-netcdf-fortran
      uses: actions/cache@v3
      with:
        path: /home/runner/netcdf-fortran
        key: cache-netcdf-fortran-${{matrix.fortran-compiler}}-key

    - name: Install NetCDF Fortran library
      if: steps.cache-netcdf-fortran.outputs.cache-hit != 'true'
      run: |
        git clone --branch ${NFVERSION} https://github.com/Unidata/netcdf-fortran.git
        cd netcdf-fortran
        ./configure
        make -j
        sudo make install
        export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${NFHOME}/lib

    #######################################################################################
    # Build SCM, run UFS-replay case.
    #######################################################################################

    - name: Download data for SCM
      run: |
        cd ${GITHUB_WORKSPACE}
        ./contrib/get_all_static_data.sh
        ./contrib/get_thompson_tables.sh

    - name: Configure build with CMake
      run: |
        cd ${GITHUB_WORKSPACE}/scm/bin
        cmake -DCCPP_SUITES=${suites} ../src

    - name: Build SCM
      run: |
        cd ${GITHUB_WORKSPACE}/scm/bin
        make -j4

    - name: Run the SCM using the UFS-replay column case.
      run: |
        cd ${GITHUB_WORKSPACE}/scm/bin
        ./run_scm.py --npz_type gfs --file scm_ufsens_control_c192.py --timestep 360

    #######################################################################################
    # Done
    #######################################################################################