name: CI test to create SCM UFS-replay cases from UWM regression tests

on: [push, pull_request]

jobs:
  run_scm_ufs_replay:

    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    defaults:
      run:
        shell: bash -el {0}

    # Environmental variables
    env:
      dir_rt: /data/ufs_rts
      ufs_rt_cache: /home/runner/ufs_rts
    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Initialize submodules
      run: git submodule update --init --recursive

    - name: Update system packages
      run: sudo apt-get update
 
    - name: Cache Conda environment
      uses: actions/cache@v3
      with:
        path: ~/conda_pkgs_dir
        key: conda-pkgs

    - name: Set up Python 3.8.5
      uses: actions/setup-python@v3
      with:
        python-version: 3.8.5

    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH

    - name: In
      run: |
         conda env create -f environment-ufsreplay.yml
         conda activate env_ufsreplay
#        conda install --yes -c conda-forge f90nml
#        conda install --yes -c conda-forge netCDF4
#        conda install --yes -c conda-forge xarray
#        conda install --yes -c conda-forge numpy
#        conda install --yes -c conda-forge shapely
#        conda install --yes -c conda-forge xesmf

    #######################################################################################
    # Create UFS-replay case for SCM using UWM Regression Tests
    #######################################################################################

#    - name: Cache UWM regression test output.

#    - name: Download UWM regression tests from DTC FTP site.
#      run: |
#        if test ! -d "${dir_rt_cache}"; then
#          mkdir -p ${dir_rt_cache} && cd ${dir_rt_cache}
#          wget ftp://ftp.rap.ucar.edu:/pub/ccpp-scm/ufs_rts_scmreplay_ci.tar
#          tar -xvf ufs_rts_scmreplay_ci.tar
#          ls ${dir_rt_cache}
#        fi
#        for file in "${dir_rt_cache}"/*; do
#          if test ! -d "${file}"; then
#            echo "copying '${file}'..."
#            cp "${file}" "${GITHUB_WORKSPACE}"
#          fi
#        done

    - name: Run UFS_forcing_ensemble_generator.py
      run: |
        cd ${GITHUB_WORKSPACE}/scm/etc/scripts/
        pwd
        ./UFS_forcing_ensemble_generator.py -h
