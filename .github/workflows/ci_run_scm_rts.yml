
name: build and run SCM regression tests

on:
  push:
    branches: [main] # add artifact to main branch
  pull_request:
  workflow_dispatch:

jobs:
  run_scm_rts:

    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        fortran-compiler: [12]
        build-type:       [Release, Debug, SinglePrecision]
        py-version:       [3.11]

    continue-on-error: true

    # Environmental variables
    env:
      NFHOME:     /home/runner/netcdf-fortran
      NFVERSION:  v4.5.3
      bacio_ROOT: /home/runner/bacio
      sp_ROOT:    /home/runner/NCEPLIBS-sp
      w3emc_ROOT: /home/runner/myw3emc
      SCM_ROOT:   /home/runner/work/ccpp-scm/ccpp-scm
      suites:     SCM_GFS_v15p2,SCM_GFS_v15p2_ntiedtke,SCM_GFS_v16,SCM_GFS_v17_p8,SCM_HRRR,SCM_RRFS_v1beta,SCM_RAP,SCM_WoFS_v0,SCM_HRRR_gf,SCM_GFS_v17_p8_ugwpv1,SCM_GFS_v16_RRTMGP,SCM_GFS_v16_debug,SCM_GFS_v16_no_nsst,SCM_GFS_v17_p8_ugwpv1_no_nsst,SCM_RRFS_v1beta_no_nsst,SCM_GFS_v16_gfdlmpv3,SCM_GFS_v17_p8_ugwpv1_tempo
      suites_ps:  SCM_GFS_v15p2_ps,SCM_GFS_v15p2_ntiedtke_ps,SCM_GFS_v16_ps,SCM_GFS_v17_p8_ps,SCM_HRRR_ps,SCM_RRFS_v1beta_ps,SCM_RAP_ps,SCM_WoFS_v0_ps,SCM_HRRR_gf_ps,SCM_GFS_v17_p8_ugwpv1_ps,SCM_GFS_v16_RRTMGP_ps,SCM_GFS_v16_debug_ps,SCM_GFS_v16_no_nsst_ps,SCM_GFS_v17_p8_ugwpv1_no_nsst_ps,SCM_RRFS_v1beta_no_nsst_ps,SCM_GFS_v16_gfdlmpv3_ps,SCM_GFS_v17_p8_ugwpv1_tempo_ps
      dir_rt:     /home/runner/work/ccpp-scm/ccpp-scm/test/artifact-${{matrix.build-type}}
      dir_bl:     /home/runner/work/ccpp-scm/ccpp-scm/test/BL-${{matrix.build-type}}
      artifact_origin: ${{ github.event_name == 'pull_request' && 'PR' || ('main' == 'main' && 'main' || 'PR') }}
      GH_TOKEN:   ${{ github.token }}

    # Workflow steps
    steps:
    # Initialize and build SCM, run regressions tests
    - name: Checkout SCM code (into /home/runner/work/ccpp-scm/)
      uses: actions/checkout@v5

    - name: Create directory for SCM RT baselines
      run: mkdir ${dir_bl}

    - name: Test gh api Get Artifact-Info
      run: |
        gh api \
        repos/NCAR/ccpp-scm/actions/artifacts

    - name: Get Artifact Id Numbers
      run: |
        gh api \
        repos/NCAR/ccpp-scm/actions/artifacts \
        --jq '[.artifacts[] | select(.name == "rt-baselines-Debug-main" and (.expired | not))] | sort_by(.create_at) | first | .id '

    - name: Save Artifact Id Numbers
      run: |
        DEBUG_ID=$(gh api \
        repos/NCAR/ccpp-scm/actions/artifacts \
        --jq '[.artifacts[] | select(.name == "rt-baselines-Debug-main" and (.expired | not))] | sort_by(.create_at) | first | .id ')
        echo "debug_id=${DEBUG_ID}" >> "$GITHUB_OUTPUT"

    - name: Check Artifact Id Numbers
      run: echo "debug_id = ${debug_id}"

    - name: Download SCM RT baselines
      uses: actions/download-artifact@v5
      with:
        name: rt-baselines-${{matrix.build-type}}-main
        path: ${dir_bl}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-id: ${debug_id}

    - name: List SCM RT baseline
      run: |
        cd ${dir_bl}
        ls
